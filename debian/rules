#!/usr/bin/make -f
# -*- makefile -*-

export DH_VERBOSE=1
export DH_OPTIONS
export DEB_BUILD_HARDENING=1

BUILD_DIR=debian/build-tree
INSTALL_DIR_RELATIVE=install-tree
INSTALL_DIR=debian/$(INSTALL_DIR_RELATIVE)
LSB_RELEASE := $(shell lsb_release -i -s)
DEFAULT_MODE=$(INSTALL_DIR)/19

MODES=19 20 18

# llvm 3.1 must be used until the fix for this bug is released
# https://bugs.launchpad.net/ubuntu/+source/llvm-3.2/+bug/1179780
RBX_COMMON_CONFARGS = --prefix=/usr \
											--llvm-config=/usr/bin/llvm-config-3.1 \
											--skip-prebuilt

RBX_19_CONFARGS = --enable-version=19
RBX_20_CONFARGS = --enable-version=20
RBX_18_CONFARGS = --enable-version=18

ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	DEB_BUILD_STRIP = yes
endif

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	BUILDMAKEFLAGS = -j$(NUMJOBS)
endif

mode-build-%:
	mkdir "$(BUILD_DIR)/$*"
	cp -a `find . -maxdepth 1 -mindepth 1 -not -name debian` $(BUILD_DIR)/$*
	cd $(BUILD_DIR)/$* && ./configure \
		$(RBX_COMMON_CONFARGS) $(RBX_$(*)_CONFARGS) $(CONFFLAGS)
	# something similar to one of these options will have to work to install
	# rubinius to debian/install-tree/19/usr with it compiled to run from /usr
	# 1- cd $(BUILD_DIR)/$* && rake build
	# 1- cd $(BUILD_DIR)/$* && rake install --destdir="$(INSTALL_DIR)/$*"
	# 2- rake -f $(BUILD_DIR)/$*/Rakefile build
	# 2- rake -f $(BUILD_DIR)/$*/Rakefile install --destdir="$(INSTALL_DIR)/$*"
	#
	# build results and precompiled gems
	#   /usr/bin/rbx
	#   /usr/lib/rubinius/[gems,kernel,lib,runtime]
	#   /usr/lib/rubinius/lib/ruby/[1.8,1.9,2.0]
	#   /usr/share/man/man1/rbx.1
	#
	# user installed gems
	#   /var/lib/gems/[1.8,1.9.1,2.0]/gems

override_dh_auto_clean:
	rm -rf $(BUILD_DIR)
	rm -rf $(INSTALL_DIR)
	rm -f debian/tmp

override_dh_auto_configure:
	mkdir $(BUILD_DIR)
	mkdir $(INSTALL_DIR)

override_dh_auto_build override_dh_auto_install:

override_dh_install-arch:
	$(MAKE) $(BUILDMAKEFLAGS) -f $(CURDIR)/debian/rules $(patsubst %, mode-build-%, $(MODES))

%:
	dh $@ --parallel
